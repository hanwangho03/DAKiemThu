@using System.Globalization
@model IEnumerable<WebDoDienTu.Models.Order>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@{
    var revenueByMonth = ViewBag.RevenueByMonth as Dictionary<int, decimal>;
    var tongDoanhSo = ViewBag.tongDoanhSo;
    var tongSoLuongSP = ViewBag.tongSoLuongSP;
    var tongDonHang = ViewBag.tongDonHang;
    var soLuongUser = ViewBag.soLuongUser;
}

<main>
    <div class="container-fluid px-4">
        <h1 class="mt-4">Trang chủ</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item active">Dashboard</li>
        </ol>
        <div class="row">
            <!-- Doanh số Card -->
            <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
                <div class="card bg-primary text-white mb-4">
                    <div class="card-body">Doanh số</div>
                    <span class="card-body display-6 text-center">@tongDoanhSo.ToString("N0", new CultureInfo("vi-VN"))</span>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <a class="small text-white stretched-link" asp-area="Admin" asp-controller="ThongKe" asp-action="Index">View Details</a>
                        <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                    </div>
                </div>
            </div>

            <!-- Đơn hàng Card -->
            <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
                <div class="card bg-warning text-white mb-4">
                    <div class="card-body">Đơn hàng</div>
                    <span class="card-body display-6 text-center">@tongDonHang</span>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <a class="small text-white stretched-link" asp-area="admin" asp-controller="Order" asp-action="Index">View Details</a>
                        <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                    </div>
                </div>
            </div>

            <!-- Khách hàng Card -->
            <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
                <div class="card bg-success text-white mb-4">
                    <div class="card-body">Khách hàng</div>
                    <span class="card-body display-6 text-center">@soLuongUser</span>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <a class="small text-white stretched-link" asp-area="admin" asp-controller="Users" asp-action="Index">View Details</a>
                        <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                    </div>
                </div>
            </div>

            <!-- Sản phẩm Card -->
            <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
                <div class="card bg-danger text-white mb-4">
                    <div class="card-body">Sản phẩm</div>
                    <span class="card-body display-6 text-center">@tongSoLuongSP</span>
                    <div class="card-footer d-flex align-items-center justify-content-between">
                        <a class="small text-white stretched-link" asp-area="admin" asp-controller="Product" asp-action="Index">View Details</a>
                        <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-area me-1"></i>
                    Doanh thu tháng
                </div>
                <div class="card-body">
                    <canvas id="myAreaChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
    </div>
</main>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        var ctx = document.getElementById("myAreaChart").getContext('2d');
        var maxRevenue = Math.max.apply(Math, [
            @revenueByMonth[1], @revenueByMonth[2], @revenueByMonth[3],
            @revenueByMonth[4], @revenueByMonth[5], @revenueByMonth[6],
            @revenueByMonth[7], @revenueByMonth[8], @revenueByMonth[9],
            @revenueByMonth[10], @revenueByMonth[11], @revenueByMonth[12]
        ]);
        var stepSize = Math.ceil(maxRevenue / 5 / 5000000) * 5000000;

        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
                datasets: [{
                    label: "Doanh thu",
                    lineTension: 0.3,
                    backgroundColor: "rgba(2,117,216,0.2)",
                    borderColor: "rgba(2,117,216,1)",
                    pointRadius: 5,
                    pointBackgroundColor: "rgba(2,117,216,1)",
                    pointBorderColor: "rgba(255,255,255,0.8)",
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(2,117,216,1)",
                    pointHitRadius: 50,
                    pointBorderWidth: 2,
                    data: [
                        @revenueByMonth[1], // Tháng 1
                        @revenueByMonth[2], // Tháng 2
                        @revenueByMonth[3], // Tháng 3
                        @revenueByMonth[4], // Tháng 4
                        @revenueByMonth[5], // Tháng 5
                        @revenueByMonth[6], // Tháng 6
                        @revenueByMonth[7], // Tháng 7
                        @revenueByMonth[8], // Tháng 8
                        @revenueByMonth[9], // Tháng 9
                        @revenueByMonth[10], // Tháng 10
                        @revenueByMonth[11], // Tháng 11
                        @revenueByMonth[12] // Tháng 12
                    ],
                }],
            },
            options: {
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'month'
                        },
                        gridLines: {
                            display: false
                        },
                        ticks: {
                            maxTicksLimit: 12
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            min: 0,
                            max: Math.ceil(maxRevenue / stepSize) * stepSize,
                            stepSize: stepSize,
                            callback: function (value) {
                                return value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                            }
                        },
                        gridLines: {
                            color: "rgba(0, 0, 0, .125)",
                        }
                    }],
                },
                legend: {
                    display: true
                },
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var label = data.datasets[tooltipItem.datasetIndex].label || '';
                            label += ': ';
                            label += tooltipItem.yLabel.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                            return label;
                        }
                    }
                }
            }
        });
    });

</script>
